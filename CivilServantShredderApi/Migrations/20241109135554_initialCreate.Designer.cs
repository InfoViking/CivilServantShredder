// <auto-generated />
using System;
using CivilServantShredderApi.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CivilServantShredderApi.Migrations
{
    [DbContext(typeof(ShredderDatabase))]
    [Migration("20241109135554_initialCreate")]
    partial class initialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("Adminbereich.Models.BP_Poll", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeadLine")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BP_Polls");
                });

            modelBuilder.Entity("Adminbereich.Models.BP_TextAndPicture", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeadLine")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PictureBase64")
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BP_TextAndPictures");
                });

            modelBuilder.Entity("Adminbereich.Models.BP_TextOnly", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("HeadLine")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("BP_TextOnlys");
                });

            modelBuilder.Entity("Adminbereich.Models.BP_Poll", b =>
                {
                    b.OwnsMany("Adminbereich.Models.PollSelection", "PollSelections", b1 =>
                        {
                            b1.Property<Guid>("BP_PollId")
                                .HasColumnType("TEXT");

                            b1.Property<int>("Id")
                                .ValueGeneratedOnAdd()
                                .HasColumnType("INTEGER");

                            b1.Property<bool>("Selected")
                                .HasColumnType("INTEGER");

                            b1.Property<string>("SelectionText")
                                .IsRequired()
                                .HasColumnType("TEXT");

                            b1.HasKey("BP_PollId", "Id");

                            b1.ToTable("BP_Polls");

                            b1.ToJson("PollSelections");

                            b1.WithOwner()
                                .HasForeignKey("BP_PollId");
                        });

                    b.Navigation("PollSelections");
                });
#pragma warning restore 612, 618
        }
    }
}
